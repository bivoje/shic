CNT	START	256

NUM	WORD	0		THE NUMBER TO EXAMINE
MASK	WORD	1		MASK FOR BIT TESTING
COUNT	WORD	0		ONE-WORD VARIABLE INITIALIZED TO 0
ZERO	WORD	0		CONSTANT ZERO
ONE	WORD	1		CONSTANT ONE
THREE	WORD	3		CONSTANT THREE
DEVIN	BYTE	X'03'		INPUT DEVICE NUMBER
DEVOUT	BYTE	X'06'		OUTPUT DEVICE NUMBER

main	J	readin

readin	TD	DEVIN		TEST DEVICE
	JEQ	halt
	LDX	ZERO
loopy	RD	DEVIN		READ FROM DEVICE
	STCH	NUM,X
	TIX	THREE
	JLT	loopy a

start	LDA	MASK		LOAD THE MASK TO `A`

loopf	COMP	ZERO		COMPARE `MASK` WITH 0
	JEQ	output		DONE IF `MASK` HAS OVERFLOWED
	AND	NUM		A = mask & x
	COMP	ZERO		COPARE THE BIT AT THE MASK
	JEQ	noinc		SKIP INCREASING WHEN THE BIT IS 0
	LDA	COUNT		LOAD COUNT
	ADD	ONE		INCREASE COUNT BY ONE
	STA	COUNT		SAVE TO COUNT
noinc	LDA	MASK		LOAD THE MASK AGAIN
	ADD	MASK		DOUBLE THE MASK
	STA	MASK		SAVE MASK
	J	loopf

output	TD	DEVOUT		TEST DEVICE
	JEQ	halt
	LDX	ZERO
loopx	LDCH	COUNT,X
	WD	DEVOUT		WRITE TO DEVICE
	TIX	THREE
	JLT	loopx

halt	J	0
	END	main

.	int main()
.	{
.	  int x = ??;
.	  int count = 0;
.         int mask = 1;
.         while(mask)
.	  {
.	    count += mask & x;
.           mask += mask;
.	  }
.	}
.	
.	we need 3 variable x, count ,k
.	but general registers are only 2 S, T
.	A = k
.	S = 0
.	T = x COUNT = count
